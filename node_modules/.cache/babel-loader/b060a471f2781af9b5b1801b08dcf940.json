{"ast":null,"code":"import _defineProperty from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { storeShape, subscriptionShape } from '../utils/PropTypes';\nimport warning from '../utils/warning';\nvar didWarnAboutReceivingStore = false;\n\nfunction warnAboutReceivingStore() {\n  if (didWarnAboutReceivingStore) {\n    return;\n  }\n\n  didWarnAboutReceivingStore = true;\n  warning('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');\n}\n\nexport function createProvider() {\n  var _Provider$childContex;\n\n  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';\n  var subKey = arguments.length > 1 ? arguments[1] : undefined;\n  var subscriptionKey = subKey || \"\".concat(storeKey, \"Subscription\");\n\n  var Provider =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(Provider, _Component);\n\n    _createClass(Provider, [{\n      key: \"getChildContext\",\n      value: function getChildContext() {\n        var _ref;\n\n        return _ref = {}, _defineProperty(_ref, storeKey, this[storeKey]), _defineProperty(_ref, subscriptionKey, null), _ref;\n      }\n    }]);\n\n    function Provider(props, context) {\n      var _this;\n\n      _classCallCheck(this, Provider);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Provider).call(this, props, context));\n      _this[storeKey] = props.store;\n      return _this;\n    }\n\n    _createClass(Provider, [{\n      key: \"render\",\n      value: function render() {\n        return Children.only(this.props.children);\n      }\n    }]);\n\n    return Provider;\n  }(Component);\n\n  if (process.env.NODE_ENV !== 'production') {\n    Provider.prototype.componentWillReceiveProps = function (nextProps) {\n      if (this[storeKey] !== nextProps.store) {\n        warnAboutReceivingStore();\n      }\n    };\n  }\n\n  Provider.propTypes = {\n    store: storeShape.isRequired,\n    children: PropTypes.element.isRequired\n  };\n  Provider.childContextTypes = (_Provider$childContex = {}, _defineProperty(_Provider$childContex, storeKey, storeShape.isRequired), _defineProperty(_Provider$childContex, subscriptionKey, subscriptionShape), _Provider$childContex);\n  return Provider;\n}\nexport default createProvider();","map":null,"metadata":{},"sourceType":"module"}